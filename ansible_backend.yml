---
- hosts: all
  remote_user: ubuntu
  become_method: sudo
  become: true
  vars:
    project_name: "Authors Haven Backend App"
    project_path: /home/ubuntu/balder-ah-backend
    sites_available: /etc/nginx/sites-available
    sites_enabled: /etc/nginx/sites-enabled"
    sites_available_balder: /etc/nginx/sites-available/balder
    sites_enabled_balder: /etc/nginx/sites-enabled/balder
    PM2_PATH: $PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u ubuntu --hp /home/ubuntu
  tasks:
    - name: Reset contents of apt list
      shell: |
        sudo rm -rf /var/lib/apt/lists/*
        sudo apt-get update

    - name: Get Nodejs gpg key
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
        state: present

    - name: Install Nodejs version 10 binary
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_10.x {{ ansible_distribution_release }} main"
        state: present

    - name: Install Node
      apt:
        name: nodejs
        state: present

    - name: Clone the repository
      git:
        repo: https://github.com/andela/balder-ah-backend.git
        dest: "{{ project_path }}"

    - name: Get .env file
      shell: |
        sudo cat /home/ubuntu/env_variable/.env > .env
      args:
        chdir: "{{ project_path }}"

    - name: Install node packages
      shell: |
        npm i -ES --unsafe-perm=true
        sudo npm install -y node-gyp -g -ES --unsafe-perm=true
      args:
        chdir: "{{ project_path }}"

    - name: Checkout to deployment and update start-script
      shell: |
        git checkout -b aws-deploy
        echo '
          {
            "name": "express-authorshaven",
            "version": "1.0.0",
            "description": "A Social platform for the creative at heart",
            "main": "dist/server.js",
            "scripts": {
              "clean": "rimraf dist",
              "dev": "npm-run-all --parallel clean build migrate",
              "dev:start": "npm run dev && cross-env NODE_ENV=development npm run start",
              "dev:start:watch": "nodemon --watch src --exec 'npm run dev:start'",
              "start": "cross-env NODE_ENV=production node dist/server.js",
              "build": "babel ./src -d dist",
              "migrate": "sequelize db:migrate",
              "migrate:test": "sequelize db:migrate:undo:all && npm run migrate",
              "postinstall": "npm run dev",
              "test-env": "cross-env NODE_ENV=test",
              "test": "npm run test-env npm run migrate:test && npm run test-report",
              "test-report": "npm run test-env nyc --reporter=html --reporter=text mocha",
              "test:watch": "nodemon --watch test --exec npm run test-env npm test",
              "coverage": "nyc report --reporter=text-lcov | coveralls"
            },
            "author": "Andela Simulations Programme",
            "license": "MIT",
            "dependencies": {
              "@sendgrid/mail": "^6.3.1",
              "babel-register": "6.26.0",
              "bcrypt": "^3.0.2",
              "body-parser": "^1.18.3",
              "cors": "^2.8.4",
              "dotenv": "^6.0.0",
              "express": "^4.16.3",
              "express-session": "^1.15.6",
              "jsonwebtoken": "^8.3.0",
              "morgan": "1.9.1",
              "passport": "^0.4.0",
              "passport-facebook": "^2.1.1",
              "passport-google-oauth20": "^1.0.0",
              "passport-twitter": "^1.0.4",
              "pg": "7.6.1",
              "pg-hstore": "2.3.2",
              "pusher": "^2.2.0",
              "request": "^2.87.0",
              "sequelize": "^4.41.2",
              "slug": "^0.9.2",
              "swagger-ui-express": "4.0.1",
              "winston": "^3.1.0",
              "winston-daily-rotate-file": "^3.5.1"
            },
            "devDependencies": {
              "babel-cli": "^6.26.0",
              "babel-core": "^6.26.3",
              "babel-plugin-add-module-exports": "1.0.0",
              "babel-plugin-transform-object-rest-spread": "^6.26.0",
              "babel-preset-env": "^1.7.0",
              "babel-preset-stage-2": "^6.24.1",
              "chai": "4.2.0",
              "chai-http": "4.2.0",
              "coveralls": "^3.0.2",
              "cross-env": "5.2.0",
              "eslint": "^5.9.0",
              "eslint-config-airbnb-base": "^13.1.0",
              "eslint-plugin-import": "^2.14.0",
              "ghooks": "2.0.4",
              "mocha": "5.2.0",
              "nodemon": "1.18.7",
              "npm-run-all": "4.1.5",
              "nyc": "^13.1.0",
              "rimraf": "2.6.2",
              "sequelize-cli": "5.3.0",
              "sinon": "7.1.1",
              "sinon-chai": "3.3.0"
            },
            "config": {
              "ghooks": {
                "pre-commit": "npm run test"
              }
            }
          }
        ' > package.json
      args:
        chdir: "{{ project_path }}"

    - name: Build app
      shell: npm run build
      args:
        chdir: "{{ project_path }}"

    - name: Install nginx
      apt:
        name: nginx
        state: latest

    - name: Delete nginx default file
      file:
        path: "{{ sites_available }}/default"
        state: absent

    - name: Configure nginx server
      shell: |
        echo "
          server  {
            listen 80;
            location / {
              proxy_pass 'http://127.0.0.1:3000';
            }
          }
        " > {{ sites_available_balder }}

    - name: Update nginx symlink
      file:
        src={{ sites_available_balder }}
        dest={{ sites_enabled_balder }}
        state=link

    - name: Start nginx
      service: 
        name: nginx
        state: started

    - name: Install pm2 to run app in background
      shell: npm install pm2 -g

    - name: Create pm2 start script
      shell: |
        cd /home/ubuntu/balder-ah-backend
        echo '
          {
            "apps": [
              {
                "name": "authors-haven",
                "script": "npm",
                "args": "start"
              }
            ]
          }
        ' > start_script.config.json
    
    - name: Start app with pm2
      shell: |
        cd /home/ubuntu/balder-ah-backend
        sudo pm2 start ./start_script.config.json
        sleep 30
        sudo pm2 startup
        sudo env PATH={{PM2_PATH}}
        sudo pm2 save
